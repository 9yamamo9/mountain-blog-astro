---
import { Image } from 'astro:assets'
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import FormattedDate from '../components/FormattedDate.astro'
import ContentTag from '../components/ContentTag.astro'
import type { ImageMetadata } from 'astro'
import TableOfContents from '../components/TableOfContents.astro'
import type { Heading, Headings } from '../types/Heading'
import Introduction from '../components/Introduction.astro'

type Props = {
	title: string
	description: string
	pubDate: Date
	updatedDate?: Date
	heroImage?: string
	tags?: string[]
	headings?: Headings
}

const { title, description, tags, pubDate, updatedDate, heroImage, headings } = Astro.props
const pathname = Astro.url.pathname

const heroImagePath = heroImage as string

const images = import.meta.glob<{ default: ImageMetadata }>(`/src/content/assets/hero-images/*.{jpeg,jpg,png,gif}`)
if (!images[heroImagePath]) throw new Error(`"${heroImagePath}" does not exist in glob: "src/assets/hero-images/*.{jpeg,jpg,png,gif}"`)
---

<html lang="ja">
<head>
	<BaseHead title={title} description={description} heroImage={heroImage} />
</head>

<body class="flex flex-col min-h-[100vh]">
<Header />
<main class="my-auto px-2 py-4">
	<div class="flex justify-center max-md:block">

		<article>
			{heroImage &&
				<Image class="mx-auto rounded-xl" width={510} height={255}
							 src={images[heroImage]()} alt="" />}
			<div class="w-[720px] mx-auto text-gray-700 max-md:w-full">
				<h1 class="text-center max-md:text-2xl">{title}</h1>
				<div class="text-gray-500 text-end">
					<FormattedDate date={pubDate} />
					{
						updatedDate && (
							<div class="italic">
								Last updated on
								<FormattedDate date={updatedDate} />
							</div>
						)
					}
				</div>
				<div class="my-5 text-center">
					{tags && tags.map((tag) => (
						<ContentTag name={tag} />
					))}
				</div>
				<hr class="my-2" />
				<slot />
			</div>
		</article>

		<div class="flex flex-col w-[20%] h-min sticky top-5 ml-8 gap-2 max-md:hidden">
			<Introduction />

			<hr class="w-2/3 mb-1"/>

			{headings && (
				<div class="bg-gray-50 border rounded p-2 text-gray-500">
					<p class="text-lg font-bold text-gray-500">Table of Contents</p>
					{headings.map((heading: Heading) => (
						<ul class="p-0">
							<TableOfContents depth={heading.depth} slug={heading.slug} text={heading.text} pathname={pathname} />
						</ul>
					))}
				</div>
			)}
		</div>

	</div>
</main>
<Footer />
</body>
</html>
