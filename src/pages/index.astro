---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts'
import { getCollection } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'
import ContentTag from '../components/ContentTag.astro'
import Categories from '../components/Categories.astro'
import Histories from '../components/Histories.astro'
import Introduction from '../components/Introduction.astro'

const posts = (await getCollection('blog'))
	.filter((post) => !post.data.editing)

const latestPosts = posts
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.slice(0, 4)

const categories = [...new Set(posts.map((post) => post.data.category))].sort()

const categoryCounter = new Map<string, number>()
posts.forEach((post) => {
	const category = post.data.category

	if (categoryCounter.has(category)) {
		const latestCount = categoryCounter.get(category) || 0
		categoryCounter.set(category, latestCount + 1)
	} else {
		categoryCounter.set(category, 1)
	}
})

const pubDates = [...new Set(posts.map((post) => post.data.pubDate))].sort()


const images = import.meta.glob<{ default: ImageMetadata }>(`/src/content/assets/hero-images/*.{jpeg,jpg,png,gif}`)
posts.map((post) => {
	const heroImagePath = post.data.heroImage as string
	if (!images[heroImagePath]) throw new Error(`"${heroImagePath}" does not exist in glob: "src/assets/hero-images/*.{jpeg,jpg,png,gif}"`)
})
---

<!doctype html>
<html lang="ja">
<head>
	<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
</head>

<body>
<Header />
<main class="w-[1536px] m-auto min-h-[90vh] px-2 py-4 max-lg:w-full max-md:w-full">
	<div class="flex">

		<div>
			<h1 class="text-3xl font-bold text-gray-700 mt-4 mb-2">Latest posts</h1>

			<section>
				<ul class="grid grid-cols-2 gap-5 max-md:gap-2 max-md:grid-cols-none">
					{
						latestPosts.map((post) => (
							<li class="">
								<div class="group border rounded-xl hover:border-red-700">
									<a
										class="flex-col items-center divide-y max-md:flex-col max-md:divide-y"
										href={`/blog/${post.slug}/`}>
										<Image class="p-1 rounded-xl max-md:w-full"
													 src={images[post.data.heroImage as string]()} alt="" />
										<div class="p-2">
											<h5
												class="text-gray-600 font-bold leading-2 group-hover:text-red-700">{post.data.title}</h5>
											<p class="text-sm text-gray-500 group-hover:text-red-700">{post.data.description}</p>
											<p class="text-xs text-gray-500 text-right group-hover:text-red-700">
												<FormattedDate date={post.data.pubDate} />
											</p>
											<div class="text-center">
												{post.data.tags && post.data.tags.map((tag) => (
													<ContentTag name={tag} />
												))}
											</div>
										</div>
									</a>
								</div>
							</li>
						))
					}
				</ul>
			</section>

			<div class="mt-4 text-right">
				<a class="text-lg text-gray-500 mt-4 mb-2 hover:text-red-700" href="/blog/1">ðŸ“•Read more...</a>
			</div>

		</div>

		<div class="flex flex-col w-[40%] top-14 mx-4 my-16 gap-4 sticky max-md:hidden">
			<Introduction />

			<hr class="w-2/3 mb-1"/>

			<Categories
				class=" rounded-xl border border-gray-300 bg-gray-50 p-2"
				categories={categories}
				categoryCounter={categoryCounter}
			/>

			<Histories
				class="rounded-xl border border-gray-300 bg-gray-50 p-2"
				publishedDates={pubDates}
			/>
		</div>

	</div>
</main>
<Footer />
</body>
</html>
