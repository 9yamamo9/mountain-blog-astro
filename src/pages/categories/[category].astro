---
import type { ImageMetadata } from 'astro'
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts'
import BaseHead from '../../components/BaseHead.astro'
import Header from '../../components/Header.astro'
import FormattedDate from '../../components/FormattedDate.astro'
import ContentTag from '../../components/ContentTag.astro'
import Footer from '../../components/Footer.astro'


export async function getStaticPaths() {
	const posts = await getCollection('blog')

	return posts.map((post) => {
		const category = post.data.category

		return { params: { category: category } }
	})
}

const params = Astro.params
const images = import.meta.glob<{ default: ImageMetadata }>(`/src/content/assets/hero-images/*.{jpeg,jpg,png,gif}`)

const categorizedPosts = (await getCollection('blog'))
	.filter((post) => post.data.category === params.category)
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.map((post) => {
		return { post: post, imagePath: images[post.data.heroImage as string]() }
	})

---

<html lang="ja">
<head>
	<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
</head>

<body>
<Header />
<main class="w-[960px] m-auto px-2 py-4 max-lg:w-full max-md:w-full">
	<section>
		<ul class="flex flex-col min-h-[100vh] gap-8 list-none max-md:gap-2">
			{
				categorizedPosts && categorizedPosts.map(({post, imagePath}: any) => (
					<li>
						<a
							class="group flex ease-in-out border rounded-lg border-slate-400 hover:border-red-700 items-center divide-x max-md:flex-col max-md:divide-y"
							href={`/blog/${post.slug}/`}>
							<Image class="w-[30%] p-2 max-md:w-full"
										 src={imagePath} alt="" />
							<div class="p-2">
								<h5
									class="text-gray-600 font-bold leading-2 group-hover:text-red-700">{post.data.title}</h5>
								<p class="text-sm text-gray-500 group-hover:text-red-700">{post.data.description}</p>
								<p class="text-xs text-gray-500 text-right group-hover:text-red-700">
									<FormattedDate date={post.data.pubDate} />
								</p>
								<div class="max-md:text-center">
									{post.data.tags && post.data.tags.map((tag: any) => (
										<ContentTag name={tag} />
									))}
								</div>
							</div>
						</a>
					</li>
				))
			}
		</ul>
	</section>
</main>
<Footer />
</body>
</html>
